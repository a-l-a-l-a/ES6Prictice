/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _temp = __webpack_require__(1);\n\nconsole.log(_temp.sex + 2); // boy\n/* var a = 2;\r\n{\r\n    var a = 3;\r\n}\r\nconsole.log(a)\r\n\r\nlet b = 2;\r\n{\r\n    let b = 3;\r\n}\r\nconsole.log(b);\r\n\r\nconst c = 2; */\n\n/**\r\n * 解构\r\n */\n// let [a,b,c] = [1,2,3];\n// let [a,[b,c]] = [1,[2,3]];\n\n// let [foo=true,d] = [undefined,2];//undefined输出默认值，null则是输出null\n// console.log(foo);\n// console.log(d);\n\n// let obj;\n// ({obj} = {obj:'alala'});\n// console.log(obj);\n\n// let {a,b} = {\n//     a:'1',\n//     b:'2'\n// }\n// console.log(a+b);\n\n// const [a,b,c,d,e,f]=\"JSPang\";//字符串解构\n// console.log(a);\n// console.log(b);\n// console.log(c);\n// console.log(d);\n// console.log(e);\n// console.log(f);\n\n/**\r\n * 扩展运算符和rest运算符\r\n */\n// 预留位置\n/* function alala (...arg) {\r\n    console.log(arg[0])\r\n    console.log(arg[1])\r\n    console.log(arg[2])\r\n    console.log(arg[3])\r\n}\r\nalala(1,2,3); */\n\n/* let arr1 = [1,2,3];\r\nlet arr2 = arr1;\r\narr2.push(4,5,6);\r\nconsole.log(arr1);\r\nconsole.log(arr2); */\n\n// let arr1 = [1,2,3];\n// let arr2 = [...arr1];\n// arr2.push(4,5,6);\n// console.log(arr1);\n// console.log(arr2);\n\n// function jspang(first,second,...arg){\n//         for(let val of arg){\n//             console.log(val);\n//         }\n//     }\n// jspang(0,1,2,3,4,5,6,7);\n\n/**\r\n * 字符串模板\r\n */\n/* let alala = ' 啊啦啦 ';\r\nlet blog = '我是'+alala+',大家好';\r\nlet blog6 = `<b>我是${alala},大家好</b>`\r\nconsole.log(blog6);\r\ndocument.write(blog6); */\n\n/* let jspang='技术胖';\r\nlet blog = `我是你的老朋友技术胖。这节课我们学习字符串模版。<br>`;\r\ndocument.write(blog.indexOf('技术胖'));\r\ndocument.write(blog.includes('技胖'));\r\ndocument.write(blog.startsWith('技胖'));\r\ndocument.write(blog.startsWith('我是'));\r\ndocument.write(blog.repeat(3)); */\n\n/**\r\n * es6的数字操作\r\n */\n/* let binary = 0b11;//0b开头代表是二进制；（b不区分大小写）\r\nconsole.log(binary);\r\n\r\nlet o = 0o11;//0o开头代表是八进制；（o不区分大小写）\r\nconsole.log(o);\r\n\r\nlet str = '我是字符串';\r\n\r\nconsole.log(\"是否是数字:\"+Number.isFinite(o));//判断是否是数字\r\nconsole.log(\"是否是整数:\"+Number.isInteger(o));//判断是否是整数\r\nconsole.log(\"是否是NaN:\"+Number.isNaN(NaN));//判断是否是NaN\r\n\r\nlet a='9.0';\r\nconsole.log(Number.parseInt(a)); \r\nconsole.log(Number.parseFloat(a)); */\n\n/* let a = Math.pow(2,53)-1;\r\nconsole.log(a); //9007199254740991\r\n\r\nconsole.log(Number.MAX_SAFE_INTEGER)//最大安全整数\r\nconsole.log(Number.MIN_SAFE_INTEGER)//最小安全整数 */\n\n/* let a= Math.pow(2,53)-1;\r\nconsole.log(Number.isSafeInteger(a));//true */\n\n/**\r\n * 新增的数组知识\r\n */\n// JSON数组格式转换\n/* let json = {\r\n    '0':'alala',\r\n    '1':'啊啦啦',\r\n    '2':'adasdf',\r\n    length:3//有这个的json就可以通过以下的from方法变成数组\r\n}\r\nlet arr = Array.from(json);\r\nconsole.log(arr); */\n\n/* let arr = Array.of(1,2,3,4);//它负责把一堆文本或者变量转换成数组\r\nconsole.log(arr);\r\n\r\nlet arr1 = Array.of('1','2','3','4');\r\nconsole.log(arr1); */\n\n/* let arr=[1,2,6,3,4,5,7,8,9];\r\nconsole.log(arr.find(function(value,index,arr){//value表当前查找的值，index代表当前的索引，arr表示当前的数组\r\n    console.log(value)\r\n    return value > 4;\r\n})) */\n\n/* let arr=[0,1,2,3,4,5,6,7,8,9];\r\narr.fill('alala',2,5);//2到5索引之间用‘alala’代替，包2不包5\r\nconsole.log(arr); */\n\n/* let arr=['jspang','技术胖','大胖逼逼叨']\r\nlet list=arr.entries();\r\nconsole.log(list);\r\nconsole.log(list.next().value);\r\nconsole.log(list.next().value);\r\nconsole.log(list.next().value); */\n\n/* let arr=['jspang','技术胖','大胖逼逼叨']\r\nfor (let [item,index] of arr){\r\n    console.log(item+\" \"+index);\r\n} */\n\n/* let arr=['jspang','技术胖','大胖逼逼叨']\r\nfor (let [index,val] of arr.entries()){\r\n    console.log(index+':'+val);\r\n} */\n\n/**\r\n * 箭头函数(不能当构造函数使用，不能有new)\r\n */\n/* var add = (a,b=1) => {\r\n    return a+b;\r\n}\r\nconsole.log(add(1,2)) */\n\n/**\r\n * ES6中的函数和数组补漏\r\n */\n\n//对象的函数解构\n/* let json = {\r\n    a: 'alala',\r\n    b:'啊啦啦',\r\n    d:'a'\r\n}\r\nfunction fun({a,b='alala',d}){\r\n    console.log(a,b,d)\r\n}\r\nfun(json); */\n\n//数组的函数解构\n/* let arr = [1,2,3,4];\r\nfunction fun(a,b,c,d,e){\r\n    console.log(a,b,c,d)\r\n}\r\nfun(...arr); */\n\n// in的用法\n/* let obj = {    \r\n    a: 'jspang',\r\n    b: '技术胖'\r\n}\r\nconsole.log('a' in obj);   //true */\n\n/* let arr = [,,];\r\nconsole.log(arr.length)\r\nconsole.log(0 in arr);\r\n\r\nlet arr1 = ['alala',''];\r\nconsole.log(0 in arr1); */\n\n//数组的遍历方法\n/* let arr=['jspang','技术胖','前端教程']; \r\narr.forEach((val,index)=>console.log(index,val)); */\n\n/* let arr=['jspang','技术胖','前端教程'];\r\narr.filter(x=>console.log(x)); */\n\n/* let arr=['jspang','技术胖','前端教程'];\r\narr.some(x=>console.log(x)); */\n/* some() 方法用于检测数组中的元素是否满足指定条件（函数提供）。\r\nsome() 方法会依次执行数组的每个元素：\r\n如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。\r\n如果没有满足条件的元素，则返回false。\r\n注意： some() 不会对空数组进行检测。\r\n注意： some() 不会改变原始数组。 */\n\n/* let arr=['jspang','技术胖','前端教程'];\r\nconsole.log(arr.map(x=>'web'));\r\n// map在这里起到一个替换的作用 */\n\n//数组转换字符串的方法\n/* let arr = [1,2,3];\r\nconsole.log(arr.join('|'));//默认逗号隔开\r\nconsole.log(arr.toString());//只是逗号隔开 */\n\n/**\r\n * ES6中的对象\r\n */\n//对象赋值\n/* let a='a';\r\nlet b='b';\r\nlet obj = {a,b};\r\nconsole.log(obj); */\n\n//对象key值构建\n/* let key = 'skill';\r\nvar obj = {\r\n    [key]:'web'\r\n}\r\nconsole.log(obj.skill);\r\n// 有时候我们会在后台取出key值，而不是我们前台定义好的，这时候我们如何构建我们的key值那。比如我们在后台取了一个key值，然后可以用[ ] 的形式，进行对象的构建 */\n\n// Object.is()对象比较\n/* var obj1 = { name: 'alala'};\r\nvar obj2 = { name: 'alala'};\r\nconsole.log(obj1.name === obj2.name);\r\nconsole.log(Object.is(obj1.name,obj2.name));\r\nconsole.log(+0 === -0);  //true\r\nconsole.log(NaN === NaN ); //false\r\nconsole.log(Object.is(+0,-0)); //false\r\nconsole.log(Object.is(NaN,NaN)); //true\r\n//，===为同值相等，is()为严格相等 */\n\n// 合并对象\n/* var a={a:'jspang'};\r\nvar b={a:'技术胖'};\r\nvar c={c:'web'};\r\n\r\nlet d = Object.assign(a,b,c)\r\nconsole.log(d); */\n\n/* var arr = [1,2];\r\nvar arr2 = [3,4];\r\nvar arr3 = arr.concat(arr2)\r\nvar arr4 = arr + arr2;\r\nconsole.log(arr3) */\n\n/**\r\n * Symbol在对象中的作用\r\n */\n\n/* var g = Symbol('a');\r\nconsole.log(g);\r\nconsole.log(g.toString()); */\n\n/**\r\n * Set和WeakSet数据结构\r\n */\n// Set\n/* let setArr = new Set(['a','b','c','d','c']);\r\nconsole.log(setArr);//Set自动去重\r\nsetArr.add('前端职场')//追加add\r\nconsole.log(setArr)\r\nsetArr.delete('前端职场');//删除delete\r\nconsole.log(setArr);\r\nconsole.log(setArr.has('前端职场'));//判断Set中是否存在‘前端职场’;\r\nfor (let item of setArr) {\r\n    console.log(item);\r\n}\r\nconsole.log(setArr.size);//size属性查看set的数量\r\n\r\nsetArr.forEach((value,index)=>{console.log(index+':'+value)})\r\n\r\nsetArr.clear();//清空setArr\r\nconsole.log(setArr); */\n\n// WeakSet\n/* let weakobj = new WeakSet();\r\nlet obj = {a:'a',b:'b'};\r\nlet obj1 = obj;\r\nweakobj.add(obj);\r\nweakobj.add(obj1);\r\nconsole.log(weakobj); */\n\n/**\r\n * map的数据结构\r\n */\n/* let json = {\r\n    name:'alala',\r\n    skill:'web'\r\n}\r\nconsole.log(json.name);\r\nlet map = new Map();\r\nmap.set(json,'iam');//设置map\r\nconsole.log(map.get(json));//获取map的值\r\nmap.delete(json);\r\nconsole.log(map.get(json));\r\nconsole.log(map.size);\r\nconsole.log(map.has(json));\r\nconsole.log(map.clear()); */\n\n/**\r\n * 用Proxy进行预处理\r\n */\n//第一个大括号是放置对象体，第二个大括号是放置预处理机制get、set、apply\n/* let pro = new Proxy({\r\n    add:function(val){\r\n        return val+100\r\n    },\r\n    name:'alala'\r\n},{\r\n    get:function(target,key,property){//target是pro\r\n        console.log('come in Get')\r\n        // console.log(target[key])\r\n        return target[key];\r\n    },\r\n    set:function(target,key,value,receiver){\r\n        console.log('do set')\r\n        return target[key] = value;\r\n    },\r\n    apply:function(target,ctx,args){\r\n        console.log('do apply');\r\n    }\r\n})\r\n// pro.name = '啊啦啦';\r\n// console.log(pro.name);\r\nconsole.log(pro.add(2)); */\n\n/* let target = function(){\r\n    return 'alala';\r\n}\r\nlet handler = {\r\n    apply:function(target,ctx,args){\r\n        console.log('do apply');\r\n        return Reflect.apply(...arguments);\r\n    }\r\n}\r\nlet pro = new Proxy(target,handler);\r\nconsole.log(pro()); */\n\n/**\r\n * promise对象的使用（承诺）\r\n */\n/* let state = 1;\r\nfunction step1(resolve,reject){//第一个参数：成功的时候的返回值。第二个参数：失败时候的返回值（可换别的）\r\n    console.log('1开始');\r\n    if(state == 1){\r\n        resolve('1完成');\r\n    }else{\r\n        reject('1错误');\r\n    }\r\n}\r\nfunction step2(resolve,reject){\r\n    console.log('2开始');\r\n    // state=2;\r\n    if(state == 1){\r\n        resolve('2完成');\r\n    }else{\r\n        reject('2错误');\r\n    }\r\n}\r\nfunction step3(resolve,reject){\r\n    console.log('3开始');\r\n    if(state == 1){\r\n        resolve('3完成');\r\n    }else{\r\n        reject('3错误');\r\n    }\r\n}\r\n\r\nnew Promise(step1).then(function(val){\r\n    console.log(val);\r\n    return new Promise(step2);\r\n}).then(function(val){\r\n    console.log(val);\r\n    return new Promise(step3);\r\n}).then(function(val){\r\n    console.log(val);\r\n}) */\n\n/**\r\n * class类\r\n */\n//类里面跟的都是方法，方法和方法之间直接分开就行\n/* class Coder {\r\n    name(val){\r\n        console.log(val);\r\n        return val;\r\n    }\r\n\r\n    add(){\r\n        return this.a+this.b;\r\n    }\r\n\r\n    constructor(a,b){//用constructor来定义 类 的参数\r\n        this.a = 1;\r\n        this.b = 2;\r\n    }\r\n}\r\nlet alala = new Coder(1,2);\r\nalala.name('alala');\r\nconsole.log(alala.add());\r\nclass Htmler extends Coder {//类的继承\r\n\r\n}\r\nlet all = new Htmler;\r\nall.name('all'); */\n\n/**\r\n * 模块化操作\r\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar sex = \"girl\";\nexports.sex = sex;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcC5qcz9hZDFiIl0sIm5hbWVzIjpbInNleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxNQUFJLE1BQVI7UUFFSUEsRyxHQUFBQSxHIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2V4PVwiZ2lybFwiO1xyXG5leHBvcnQge1xyXG4gICAgc2V4XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdGVtcC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);